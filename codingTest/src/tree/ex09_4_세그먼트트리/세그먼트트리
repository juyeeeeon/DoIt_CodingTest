세그먼트 트리
	: 주어진 데이터의 구간 합과 데이터 업데이트를 빠르게 수행하기 위한 자료구조
	
	세그먼트 트리의 종류
		: 구간 합, 최대/최소 구하기
		
	
	1) 트리 초기화하기
		리프 노드의 개수가 데이터의 개수(N) 이상이 되도록 트리 배열(일차원 배열)을 만듦.
		1-1) 2^k >= N 을 만족하는 k의 최솟값을 구한 후, 
		1-2) 2^k * 2 를 트리 배열의 크기로 정의한다.
		1-3) 2^k 를 시작 인덱스로 취하여 리프 노드에 원본 데이터를 입력한다.
		1-4) 리프 노드를 제외한 나머지 노드의 값을 채운다.(2^k -1 부터 1번쪽으로 채움)
	
	2) 질의값 구하기(구간 합 또는 최대/최소)
		세그먼트 트리의 리프 노드에 해당하는 인덱스로 변경.
		
		* 세그먼트 트리 index = 주어진 질의 index + 2^k - 1
		
		질의값 구하는 과정
		2-1) start_index % 2 == 1 일 때 해당 노드를 선택한다.
		2-2) end_index % 2 == 0 일 때 해당 노드를 선택한다.
			>> 해당 노드를 선택했다는 것은 해당 노드의 부모가 나타내는 범위가
			질의 범위를 넘어가기 때문에 해당 노드를 질의값에 영향을 미치는 독립 노드로 선택하고
			해당 노드의 부모 노드는 대상 범위에서 제외한다는 뜻.
			
		2-3) start_index depth 변경 : start_index = (start_index + 1) / 2 연산을 실행
		2-4) end_index depth 변경 : end_index = (end_index - 1) / 2 연산을 실행
		2-5) 2-1)~2-4)를 반복하다가 start_index > end_index 가 되면 종료한다.
	
	3) 데이터 업데이트하기
		업데이트가 빈번할 때 세그먼트 트리 사용
		ex)"구간합 문제"에서 업데이트 없을 때는 그냥 일차원 배열에서 구간 합 구하는게 나음
			(변경 후의 값 - 변경 전의 값)을 현재 idx부터 idx = idx/2를 반복하여 root노드까지 업데이트
		ex)"최대/최소 문제"에서 노드값이 변경되지 않는 노드에서 업데이트 반복을 멈춤.