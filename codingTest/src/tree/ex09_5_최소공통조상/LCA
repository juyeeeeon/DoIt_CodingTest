최소공통조상(LCA = Lowest Common Ancestor)
	: 트리 그래프에서 임의의두 노드를 선택했을 때 
	  두 노드가 각각 자신을 포함해 거슬러 올라가면서 부모 노드를 탐색할 때
	  처음 공통으로 만나게 되는 부모 노드
	  
	  >> 일반적인 최소 공통 조상 구하기
	  	* 트리의 높이가 커질 경우, 시간제약의 문제 발생 >> 해결 : 빠르게 구하기
	  	
	  	1) 루트 노드에서 탐색을 시작해 "각 노드"의 "부모 노드(P[])"와 "깊이(depth[])"를 저장(BFS/DFS 이용)
	  	2) 선택된 두 노드의 깊이가 다른 경우, 
	  	   더 깊은 노드의 노드를 부모노드로 1개씩 올려 주면서 같은 깊이로 맞춘다.
	  	   이때 두 노드가 같은 경우, 해당 노드가 최소 공통 조상이므로 탐색을 종료
	  	   
	  	   깊이가 같은 상태에서는 동시에 부모 노드로 올라가면서
	  	   두 노드가 같은 노드가 될 때까지 반복한다.
	  	   이때 처음 만나는 노드가 최소 공통 조상이 된다.
	  
	  >> 빠르게 구하기
	  	* 기존의 한 단계씩 올려주는 방식에서 2^k씩 올라가 비교하는 방식
	  	  따라서 기존에 자신의 부모 노드만 저장해 놓던 방식에서 2^k번째 위치의 부모 노드까지 저장해둬야 함.
	  	
	  	1) 부모 노드 저장 배열(P[][]) 만들기
	  	   *부모 노드 배열의 정의
	  	   		P[K][N] = N번 노드의 2^k번째 부모의 노드 번호
	  	   *부모 노드 배열의 점화식
	  	   		P[K][N] = P[K-1][P[K-1][N]]
	  	   		
	  	2) 선택된 두 노드의 깊이 맞추기
	  	   P배열을 이용해 깊이를 2^k 단위로 넘어가며 맞춘다.
	  	   		EX)높이 차이가 20이면, 2^k <= 20을 만족하는 k의 최댓값 만큼 이동하면서
	  	   		   높이 차이가 0이 될 때까지 반복한다.
	  	   		   따라서 2^4(=16) -> 2^2(=4) 와 같이 두 번 이동하면 된다.
	  	   		   
	  	3) 최소 공통 조상 찾기
	  	   2^k 단위로 점프하면서 맞춘다. k값을 1씩 감소하면서 P배열을 이용해
	  	   최초로 두 노드의 부모가 달라지는 값을 찾는다.
	  	   두 노드가 같은 노드라면 해당 노드가,
	  	   다른 노드라면 바로 위의 부모 노드가 최소 공통 조상이 된다.